// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: users_feeds_join.sql

package database

import (
	"context"
)

const getAllFeedsWithUser = `-- name: GetAllFeedsWithUser :many
SELECT "feeds"."name", "feeds"."url", "users"."name" AS "user_name"
FROM "feeds"
JOIN "users"
ON "feeds"."user_id" = "users"."id"
`

type GetAllFeedsWithUserRow struct {
	Name     string
	Url      string
	UserName string
}

func (q *Queries) GetAllFeedsWithUser(ctx context.Context) ([]GetAllFeedsWithUserRow, error) {
	rows, err := q.db.QueryContext(ctx, getAllFeedsWithUser)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAllFeedsWithUserRow
	for rows.Next() {
		var i GetAllFeedsWithUserRow
		if err := rows.Scan(&i.Name, &i.Url, &i.UserName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
